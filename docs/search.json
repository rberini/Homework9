[
  {
    "objectID": "modeling_practice.html",
    "href": "modeling_practice.html",
    "title": "Modeling Practice",
    "section": "",
    "text": "library(tidyverse)\nlibrary(tidymodels)\nlibrary(janitor)\nlibrary(naniar)\nlibrary(skimr)\nlibrary(pastecs)\noptions(scipen = 999, digits = 2)\ntidymodels_prefer()"
  },
  {
    "objectID": "modeling_practice.html#load-required-packages",
    "href": "modeling_practice.html#load-required-packages",
    "title": "Modeling Practice",
    "section": "",
    "text": "library(tidyverse)\nlibrary(tidymodels)\nlibrary(janitor)\nlibrary(naniar)\nlibrary(skimr)\nlibrary(pastecs)\noptions(scipen = 999, digits = 2)\ntidymodels_prefer()"
  },
  {
    "objectID": "modeling_practice.html#read-data",
    "href": "modeling_practice.html#read-data",
    "title": "Modeling Practice",
    "section": "Read data",
    "text": "Read data\n\nseoul_bike_data &lt;- read_csv(\"https://www4.stat.ncsu.edu/~online/datasets/SeoulBikeData.csv\",\n         locale = locale(encoding = \"Latin1\"))"
  },
  {
    "objectID": "modeling_practice.html#check-and-manipulate-the-data",
    "href": "modeling_practice.html#check-and-manipulate-the-data",
    "title": "Modeling Practice",
    "section": "Check and manipulate the data",
    "text": "Check and manipulate the data\nCheck for any missing values.\n\nvis_miss(seoul_bike_data)\n\n\n\n\n\n\n\n\nExplore columns names, column types, and values.\n\nglimpse(seoul_bike_data)\n\nRows: 8,760\nColumns: 14\n$ Date                        &lt;chr&gt; \"01/12/2017\", \"01/12/2017\", \"01/12/2017\", …\n$ `Rented Bike Count`         &lt;dbl&gt; 254, 204, 173, 107, 78, 100, 181, 460, 930…\n$ Hour                        &lt;dbl&gt; 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, …\n$ `Temperature(°C)`           &lt;dbl&gt; -5.2, -5.5, -6.0, -6.2, -6.0, -6.4, -6.6, …\n$ `Humidity(%)`               &lt;dbl&gt; 37, 38, 39, 40, 36, 37, 35, 38, 37, 27, 24…\n$ `Wind speed (m/s)`          &lt;dbl&gt; 2.2, 0.8, 1.0, 0.9, 2.3, 1.5, 1.3, 0.9, 1.…\n$ `Visibility (10m)`          &lt;dbl&gt; 2000, 2000, 2000, 2000, 2000, 2000, 2000, …\n$ `Dew point temperature(°C)` &lt;dbl&gt; -17.6, -17.6, -17.7, -17.6, -18.6, -18.7, …\n$ `Solar Radiation (MJ/m2)`   &lt;dbl&gt; 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, …\n$ `Rainfall(mm)`              &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ `Snowfall (cm)`             &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ Seasons                     &lt;chr&gt; \"Winter\", \"Winter\", \"Winter\", \"Winter\", \"W…\n$ Holiday                     &lt;chr&gt; \"No Holiday\", \"No Holiday\", \"No Holiday\", …\n$ `Functioning Day`           &lt;chr&gt; \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", …\n\n\nGenerate basic summary statistics for numeric columns and check the unique values for the categorical variables.\n\nskim(seoul_bike_data)\n\n\nData summary\n\n\nName\nseoul_bike_data\n\n\nNumber of rows\n8760\n\n\nNumber of columns\n14\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n4\n\n\nnumeric\n10\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nDate\n0\n1\n10\n10\n0\n365\n0\n\n\nSeasons\n0\n1\n6\n6\n0\n4\n0\n\n\nHoliday\n0\n1\n7\n10\n0\n2\n0\n\n\nFunctioning Day\n0\n1\n2\n3\n0\n2\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nRented Bike Count\n0\n1\n704.60\n645.00\n0\n191.0\n504.50\n1065.25\n3556.0\n▇▃▂▁▁\n\n\nHour\n0\n1\n11.50\n6.92\n0\n5.8\n11.50\n17.25\n23.0\n▇▇▆▇▇\n\n\nTemperature(°C)\n0\n1\n12.88\n11.94\n-18\n3.5\n13.70\n22.50\n39.4\n▂▆▆▇▂\n\n\nHumidity(%)\n0\n1\n58.23\n20.36\n0\n42.0\n57.00\n74.00\n98.0\n▁▅▇▇▅\n\n\nWind speed (m/s)\n0\n1\n1.72\n1.04\n0\n0.9\n1.50\n2.30\n7.4\n▇▇▂▁▁\n\n\nVisibility (10m)\n0\n1\n1436.83\n608.30\n27\n940.0\n1698.00\n2000.00\n2000.0\n▂▂▂▂▇\n\n\nDew point temperature(°C)\n0\n1\n4.07\n13.06\n-31\n-4.7\n5.10\n14.80\n27.2\n▂▃▇▇▆\n\n\nSolar Radiation (MJ/m2)\n0\n1\n0.57\n0.87\n0\n0.0\n0.01\n0.93\n3.5\n▇▁▁▁▁\n\n\nRainfall(mm)\n0\n1\n0.15\n1.13\n0\n0.0\n0.00\n0.00\n35.0\n▇▁▁▁▁\n\n\nSnowfall (cm)\n0\n1\n0.08\n0.44\n0\n0.0\n0.00\n0.00\n8.8\n▇▁▁▁▁\n\n\n\n\n\nSimplify column names.\n\nnames(seoul_bike_data) &lt;- str_remove(names(seoul_bike_data), \"\\\\s*\\\\([^\\\\)]+\\\\)\")\n\nConvert the Date column into an actual date. Turn the character variables (Seasons, Holiday, and Functioning Day) into factors. Rename the all variables to have easy to use names in snake case.\n\nseoul_bike_data &lt;-\n  seoul_bike_data |&gt;\n  mutate(Date = dmy(Date)) |&gt;\n  mutate(across(where(is.character), as.factor)) |&gt;\n  clean_names()\n\nseoul_bike_data\n\n# A tibble: 8,760 × 14\n   date       rented_bike_count  hour temperature humidity wind_speed visibility\n   &lt;date&gt;                 &lt;dbl&gt; &lt;dbl&gt;       &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;\n 1 2017-12-01               254     0        -5.2       37        2.2       2000\n 2 2017-12-01               204     1        -5.5       38        0.8       2000\n 3 2017-12-01               173     2        -6         39        1         2000\n 4 2017-12-01               107     3        -6.2       40        0.9       2000\n 5 2017-12-01                78     4        -6         36        2.3       2000\n 6 2017-12-01               100     5        -6.4       37        1.5       2000\n 7 2017-12-01               181     6        -6.6       35        1.3       2000\n 8 2017-12-01               460     7        -7.4       38        0.9       2000\n 9 2017-12-01               930     8        -7.6       37        1.1       2000\n10 2017-12-01               490     9        -6.5       27        0.5       1928\n# ℹ 8,750 more rows\n# ℹ 7 more variables: dew_point_temperature &lt;dbl&gt;, solar_radiation &lt;dbl&gt;,\n#   rainfall &lt;dbl&gt;, snowfall &lt;dbl&gt;, seasons &lt;fct&gt;, holiday &lt;fct&gt;,\n#   functioning_day &lt;fct&gt;"
  },
  {
    "objectID": "modeling_practice.html#exploratory-data-analysis",
    "href": "modeling_practice.html#exploratory-data-analysis",
    "title": "Modeling Practice",
    "section": "Exploratory data analysis",
    "text": "Exploratory data analysis\nGenerate summary statistics across variables.\n\nsummary(seoul_bike_data)\n\n      date            rented_bike_count      hour       temperature \n Min.   :2017-12-01   Min.   :   0      Min.   : 0.0   Min.   :-18  \n 1st Qu.:2018-03-02   1st Qu.: 191      1st Qu.: 5.8   1st Qu.:  4  \n Median :2018-06-01   Median : 504      Median :11.5   Median : 14  \n Mean   :2018-06-01   Mean   : 705      Mean   :11.5   Mean   : 13  \n 3rd Qu.:2018-08-31   3rd Qu.:1065      3rd Qu.:17.2   3rd Qu.: 22  \n Max.   :2018-11-30   Max.   :3556      Max.   :23.0   Max.   : 39  \n    humidity    wind_speed    visibility   dew_point_temperature\n Min.   : 0   Min.   :0.0   Min.   :  27   Min.   :-30.6        \n 1st Qu.:42   1st Qu.:0.9   1st Qu.: 940   1st Qu.: -4.7        \n Median :57   Median :1.5   Median :1698   Median :  5.1        \n Mean   :58   Mean   :1.7   Mean   :1437   Mean   :  4.1        \n 3rd Qu.:74   3rd Qu.:2.3   3rd Qu.:2000   3rd Qu.: 14.8        \n Max.   :98   Max.   :7.4   Max.   :2000   Max.   : 27.2        \n solar_radiation    rainfall     snowfall     seasons           holiday    \n Min.   :0.0     Min.   : 0   Min.   :0.0   Autumn:2184   Holiday   : 432  \n 1st Qu.:0.0     1st Qu.: 0   1st Qu.:0.0   Spring:2208   No Holiday:8328  \n Median :0.0     Median : 0   Median :0.0   Summer:2208                    \n Mean   :0.6     Mean   : 0   Mean   :0.1   Winter:2160                    \n 3rd Qu.:0.9     3rd Qu.: 0   3rd Qu.:0.0                                  \n Max.   :3.5     Max.   :35   Max.   :8.8                                  \n functioning_day\n No : 295       \n Yes:8465       \n                \n                \n                \n                \n\n\n\nskim(seoul_bike_data)\n\n\nData summary\n\n\nName\nseoul_bike_data\n\n\nNumber of rows\n8760\n\n\nNumber of columns\n14\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nDate\n1\n\n\nfactor\n3\n\n\nnumeric\n10\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: Date\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nmedian\nn_unique\n\n\n\n\ndate\n0\n1\n2017-12-01\n2018-11-30\n2018-06-01\n365\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nseasons\n0\n1\nFALSE\n4\nSpr: 2208, Sum: 2208, Aut: 2184, Win: 2160\n\n\nholiday\n0\n1\nFALSE\n2\nNo : 8328, Hol: 432\n\n\nfunctioning_day\n0\n1\nFALSE\n2\nYes: 8465, No: 295\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nrented_bike_count\n0\n1\n704.60\n645.00\n0\n191.0\n504.50\n1065.25\n3556.0\n▇▃▂▁▁\n\n\nhour\n0\n1\n11.50\n6.92\n0\n5.8\n11.50\n17.25\n23.0\n▇▇▆▇▇\n\n\ntemperature\n0\n1\n12.88\n11.94\n-18\n3.5\n13.70\n22.50\n39.4\n▂▆▆▇▂\n\n\nhumidity\n0\n1\n58.23\n20.36\n0\n42.0\n57.00\n74.00\n98.0\n▁▅▇▇▅\n\n\nwind_speed\n0\n1\n1.72\n1.04\n0\n0.9\n1.50\n2.30\n7.4\n▇▇▂▁▁\n\n\nvisibility\n0\n1\n1436.83\n608.30\n27\n940.0\n1698.00\n2000.00\n2000.0\n▂▂▂▂▇\n\n\ndew_point_temperature\n0\n1\n4.07\n13.06\n-31\n-4.7\n5.10\n14.80\n27.2\n▂▃▇▇▆\n\n\nsolar_radiation\n0\n1\n0.57\n0.87\n0\n0.0\n0.01\n0.93\n3.5\n▇▁▁▁▁\n\n\nrainfall\n0\n1\n0.15\n1.13\n0\n0.0\n0.00\n0.00\n35.0\n▇▁▁▁▁\n\n\nsnowfall\n0\n1\n0.08\n0.44\n0\n0.0\n0.00\n0.00\n8.8\n▇▁▁▁▁\n\n\n\n\n\nExplore rented_bike_count by the functioning_day variable.\n\nseoul_bike_data |&gt;\n  group_by(functioning_day) |&gt;\n  select(rented_bike_count) |&gt;\n  skim()\n\n\nData summary\n\n\nName\nselect(group_by(seoul_bik…\n\n\nNumber of rows\n8760\n\n\nNumber of columns\n2\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nfunctioning_day\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nfunctioning_day\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nrented_bike_count\nNo\n0\n1\n0\n0\n0\n0\n0\n0\n0\n▁▁▇▁▁\n\n\nrented_bike_count\nYes\n0\n1\n729\n642\n2\n214\n542\n1084\n3556\n▇▃▂▁▁\n\n\n\n\n\nThere appear to be no bike rentals on non-functioning days. This implies the business is closed on these days and should be removed from the final data used for analysis.\nCreate an object that captures all the weather variables.\n\nweather_vars &lt;- names(seoul_bike_data[4:9])\nweather_vars\n\n[1] \"temperature\"           \"humidity\"              \"wind_speed\"           \n[4] \"visibility\"            \"dew_point_temperature\" \"solar_radiation\"      \n\n\nTo simplify analysis, summarize across the hours so that each day has one observation associated with it:\n\ngroup_by() the date, seasons, and holiday variables\nfind the sum of the rented_bike_count, rainfall, and snowfall variables\nfind the mean of all the weather related variables\n\n\nnew_seoul_bike_data &lt;-\n  seoul_bike_data |&gt;\n  filter(functioning_day == \"Yes\") |&gt;\n  group_by(date, seasons, holiday) |&gt;\n  summarise(across(c(rented_bike_count, rainfall, snowfall), sum),\n            across(all_of(weather_vars), mean))\n\nnew_seoul_bike_data\n\n# A tibble: 353 × 12\n# Groups:   date, seasons [353]\n   date       seasons holiday    rented_bike_count rainfall snowfall temperature\n   &lt;date&gt;     &lt;fct&gt;   &lt;fct&gt;                  &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;       &lt;dbl&gt;\n 1 2017-12-01 Winter  No Holiday              9539      0        0       -2.45  \n 2 2017-12-02 Winter  No Holiday              8523      0        0        1.33  \n 3 2017-12-03 Winter  No Holiday              7222      4        0        4.88  \n 4 2017-12-04 Winter  No Holiday              8729      0.1      0       -0.304 \n 5 2017-12-05 Winter  No Holiday              8307      0        0       -4.46  \n 6 2017-12-06 Winter  No Holiday              6669      1.3      8.6      0.0458\n 7 2017-12-07 Winter  No Holiday              8549      0       10.4      1.09  \n 8 2017-12-08 Winter  No Holiday              8032      0        0       -3.82  \n 9 2017-12-09 Winter  No Holiday              7233      0        0       -0.846 \n10 2017-12-10 Winter  No Holiday              3453      4.1     32.5      1.19  \n# ℹ 343 more rows\n# ℹ 5 more variables: humidity &lt;dbl&gt;, wind_speed &lt;dbl&gt;, visibility &lt;dbl&gt;,\n#   dew_point_temperature &lt;dbl&gt;, solar_radiation &lt;dbl&gt;\n\n\nRecreate basic summary statistics.\n\nsummary(new_seoul_bike_data)\n\n      date              seasons         holiday    rented_bike_count\n Min.   :2017-12-01   Autumn:81   Holiday   : 17   Min.   :  977    \n 1st Qu.:2018-02-27   Spring:90   No Holiday:336   1st Qu.: 6967    \n Median :2018-05-28   Summer:92                    Median :18563    \n Mean   :2018-05-28   Winter:90                    Mean   :17485    \n 3rd Qu.:2018-08-24                                3rd Qu.:26285    \n Max.   :2018-11-30                                Max.   :36149    \n    rainfall     snowfall   temperature     humidity    wind_speed \n Min.   : 0   Min.   : 0   Min.   :-15   Min.   :22   Min.   :0.7  \n 1st Qu.: 0   1st Qu.: 0   1st Qu.:  3   1st Qu.:48   1st Qu.:1.3  \n Median : 0   Median : 0   Median : 14   Median :57   Median :1.7  \n Mean   : 4   Mean   : 2   Mean   : 13   Mean   :58   Mean   :1.7  \n 3rd Qu.: 0   3rd Qu.: 0   3rd Qu.: 23   3rd Qu.:68   3rd Qu.:2.0  \n Max.   :96   Max.   :79   Max.   : 34   Max.   :96   Max.   :4.0  \n   visibility   dew_point_temperature solar_radiation\n Min.   : 214   Min.   :-27.8         Min.   :0.03   \n 1st Qu.:1087   1st Qu.: -5.2         1st Qu.:0.28   \n Median :1558   Median :  4.6         Median :0.56   \n Mean   :1434   Mean   :  4.0         Mean   :0.57   \n 3rd Qu.:1874   3rd Qu.: 14.9         3rd Qu.:0.82   \n Max.   :2000   Max.   : 25.0         Max.   :1.22   \n\n\n\nstat.desc(new_seoul_bike_data[,4:ncol(new_seoul_bike_data)], basic = F)\n\n             rented_bike_count rainfall snowfall temperature humidity\nmedian                18563.00     0.00     0.00       13.74    57.17\nmean                  17485.31     3.58     1.86       12.78    58.17\nSE.mean                 528.90     0.63     0.47        0.62     0.79\nCI.mean.0.95           1040.21     1.23     0.92        1.23     1.56\nvar                98747243.62   139.00    77.52      137.32   220.98\nstd.dev                9937.16    11.79     8.80       11.72    14.87\ncoef.var                  0.57     3.30     4.73        0.92     0.26\n             wind_speed visibility dew_point_temperature solar_radiation\nmedian            1.658    1557.75                  4.61           0.565\nmean              1.726    1434.01                  3.95           0.568\nSE.mean           0.032      26.14                  0.69           0.017\nCI.mean.0.95      0.063      51.41                  1.36           0.033\nvar               0.357  241234.27                168.82           0.100\nstd.dev           0.597     491.16                 12.99           0.316\ncoef.var          0.346       0.34                  3.29           0.557\n\n\nReport correlation between numeric variables.\n\ncor(new_seoul_bike_data[,4:ncol(new_seoul_bike_data)])\n\n                      rented_bike_count rainfall snowfall temperature humidity\nrented_bike_count                 1.000   -0.239   -0.265      0.7531    0.036\nrainfall                         -0.239    1.000   -0.023      0.1445    0.529\nsnowfall                         -0.265   -0.023    1.000     -0.2670    0.065\ntemperature                       0.753    0.145   -0.267      1.0000    0.404\nhumidity                          0.036    0.529    0.065      0.4042    1.000\nwind_speed                       -0.193   -0.102    0.021     -0.2607   -0.234\nvisibility                        0.166   -0.222   -0.102      0.0023   -0.559\ndew_point_temperature             0.650    0.265   -0.210      0.9628    0.632\nsolar_radiation                   0.736   -0.323   -0.233      0.5503   -0.274\n                      wind_speed visibility dew_point_temperature\nrented_bike_count         -0.193     0.1660                  0.65\nrainfall                  -0.102    -0.2220                  0.26\nsnowfall                   0.021    -0.1019                 -0.21\ntemperature               -0.261     0.0023                  0.96\nhumidity                  -0.234    -0.5592                  0.63\nwind_speed                 1.000     0.2060                 -0.29\nvisibility                 0.206     1.0000                 -0.15\ndew_point_temperature     -0.288    -0.1536                  1.00\nsolar_radiation            0.096     0.2714                  0.38\n                      solar_radiation\nrented_bike_count               0.736\nrainfall                       -0.323\nsnowfall                       -0.233\ntemperature                     0.550\nhumidity                       -0.274\nwind_speed                      0.096\nvisibility                      0.271\ndew_point_temperature           0.383\nsolar_radiation                 1.000\n\n\nCreate some plots to explore relationships.\n\nnew_seoul_bike_data |&gt;\n  ggplot(aes(x = temperature, y = rented_bike_count)) +\n  geom_point(aes(color = holiday)) +\n  facet_wrap(~ seasons) +\n  ggtitle(\"Relationship Between Rented Bike Count and Solar Radiation\",\n          subtitle = \"Considering Effects of Season and Holiday\") +\n  xlab(\"Temperature\") +\n  ylab(\"Rented Bike Count\")\n\n\n\n\n\n\n\n\n\nnew_seoul_bike_data |&gt;\n  ggplot(aes(x = wind_speed, y = rented_bike_count)) +\n  geom_point() +\n  facet_wrap(~ seasons) +\n  ggtitle(\"Relationship Between Rented Bike Count and Wind Speed\",\n          subtitle = \"Considering Effects of Season\") +\n  xlab(\"Wind Speed\") +\n  ylab(\"Rented Bike Count\")\n\n\n\n\n\n\n\n\n\nnew_seoul_bike_data |&gt;\n  ggplot(aes(x = solar_radiation, y = rented_bike_count)) +\n  geom_point() +\n  facet_wrap(~ seasons) +\n  ggtitle(\"Relationship Between Rented Bike Count and Solar Radiation\",\n          subtitle = \"Considering Effects of Season\") +\n  xlab(\"Solar Radiation\") +\n  ylab(\"Rented Bike Count\")\n\n\n\n\n\n\n\n\n\nnew_seoul_bike_data |&gt;\n  mutate(snowfall = factor(if_else(snowfall == 0, \"No Snow\", \"Snow\"))) |&gt;\n  ggplot(aes(x = snowfall, y = rented_bike_count)) +\n  geom_boxplot() +\n  ggtitle(\"Distribution of Rented Bike Count for Snowy Versus Non-Snowy Days\") +\n  xlab(\"Snowfall\") +\n  ylab(\"Rented Bike Count\")\n\n\n\n\n\n\n\n\n\nnew_seoul_bike_data |&gt;\n  mutate(rainfall = factor(if_else(rainfall == 0, \"No Rain\", \"Rain\"))) |&gt;\n  ggplot(aes(x = rainfall, y = rented_bike_count)) +\n  geom_boxplot() +\n  ggtitle(\"Distribution of Rented Bike Count for Rainy Versus Non-Rainy Days\") +\n  xlab(\"Rainfall\") +\n  ylab(\"Rented Bike Count\")\n\n\n\n\n\n\n\n\n\nnew_seoul_bike_data |&gt;\n  mutate(weekpart = factor(if_else(wday(date, label = T) %in% c(\"Sun\", \"Sat\"), \"Weekend\", \"Weekday\"))) |&gt;\n  ggplot(aes(x = weekpart, y = rented_bike_count)) +\n  geom_boxplot() +\n  ggtitle(\"Distribution of Rented Bike Count for Weekdays Versus Weekends\") +\n  xlab(\"Part of Week\") +\n  ylab(\"Rented Bike Count\")\n\n\n\n\n\n\n\n\n\nnew_seoul_bike_data |&gt;\n  ggplot(aes(x = holiday, y = rented_bike_count)) +\n  geom_boxplot() +\n  ggtitle(\"Distribution of Rented Bike Count for Holidays Versus Non-Holidays\") +\n  xlab(\"Holiday\") +\n  ylab(\"Rented Bike Count\")"
  },
  {
    "objectID": "modeling_practice.html#split-the-data",
    "href": "modeling_practice.html#split-the-data",
    "title": "Modeling Practice",
    "section": "Split the data",
    "text": "Split the data\nSplit the data into a training and test set (75/25 split). Use the strata argument to stratify the split on the seasons variable.\n\nset.seed(1017)\nbike_split &lt;- initial_split(new_seoul_bike_data, prop = 0.75, strata = \"seasons\")\nbike_train &lt;- training(bike_split)\nbike_test &lt;- testing(bike_split)\n\nOn the training set, create a 10 fold CV split.\n\nbike_10_fold &lt;- vfold_cv(bike_train, 10)"
  },
  {
    "objectID": "modeling_practice.html#create-recipes",
    "href": "modeling_practice.html#create-recipes",
    "title": "Modeling Practice",
    "section": "Create recipes",
    "text": "Create recipes\nFor the 1st recipe:\n\nignore the date variable for modeling, but use it to create a weekday/weekend (factor) variable called weekpart\nstandardize the numeric variables\ncreate dummy variables for the seasons, holiday, and new weekpart variable\n\n\nbike_rec_1 &lt;-\n  recipe(rented_bike_count ~ ., data = bike_train) |&gt;\n  step_date(date, features = \"dow\") |&gt;\n  step_mutate(weekpart = factor(if_else(date_dow %in% c(\"Sun\", \"Sat\"), \"Weekend\", \"Weekday\"))) |&gt;\n  step_rm(date, date_dow) |&gt;\n  step_normalize(all_numeric(), -all_outcomes()) |&gt;\n  step_dummy(seasons, holiday, weekpart)\n\n\nbike_rec_1 |&gt;\n  prep(training = bike_train) |&gt;\n  bake(bike_train)\n\n# A tibble: 263 × 14\n   rainfall snowfall temperature humidity wind_speed visibility\n      &lt;dbl&gt;    &lt;dbl&gt;       &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;\n 1   -0.312   -0.196       1.08    0.204      -0.903      0.835\n 2   -0.312   -0.196       1.04   -0.239      -0.401      1.15 \n 3    2.39    -0.196       0.925   1.60       -1.15       0.154\n 4   -0.312   -0.196       0.945   0.243       1.30       1.07 \n 5   -0.312   -0.196       0.980   0.841       0.264      0.420\n 6   -0.195   -0.196       0.802  -0.0842      1.25       0.855\n 7   -0.312   -0.196       0.762  -0.630      -0.125      1.13 \n 8   -0.312   -0.196       0.785  -0.577      -0.860      1.16 \n 9   -0.312   -0.196       0.751  -0.677      -0.450      1.16 \n10   -0.312   -0.196       0.911   0.276      -0.874      1.13 \n# ℹ 253 more rows\n# ℹ 8 more variables: dew_point_temperature &lt;dbl&gt;, solar_radiation &lt;dbl&gt;,\n#   rented_bike_count &lt;dbl&gt;, seasons_Spring &lt;dbl&gt;, seasons_Summer &lt;dbl&gt;,\n#   seasons_Winter &lt;dbl&gt;, holiday_No.Holiday &lt;dbl&gt;, weekpart_Weekend &lt;dbl&gt;\n\n\nFor the 2nd recipe:\n\ndo the same steps as above\nadd in interactions between seasons and holiday, seasons and temperature, and temperature and rainfall\n\n\nbike_rec_2 &lt;-\n  bike_rec_1 |&gt;\n  step_interact(~ starts_with(\"holiday\"):starts_with(\"seasons\") +\n                  temperature:starts_with(\"seasons\") +\n                  temperature:rainfall)\n\n\nbike_rec_2 |&gt;\n  prep(training = bike_train) |&gt;\n  bake(bike_train)\n\n# A tibble: 263 × 21\n   rainfall snowfall temperature humidity wind_speed visibility\n      &lt;dbl&gt;    &lt;dbl&gt;       &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;\n 1   -0.312   -0.196       1.08    0.204      -0.903      0.835\n 2   -0.312   -0.196       1.04   -0.239      -0.401      1.15 \n 3    2.39    -0.196       0.925   1.60       -1.15       0.154\n 4   -0.312   -0.196       0.945   0.243       1.30       1.07 \n 5   -0.312   -0.196       0.980   0.841       0.264      0.420\n 6   -0.195   -0.196       0.802  -0.0842      1.25       0.855\n 7   -0.312   -0.196       0.762  -0.630      -0.125      1.13 \n 8   -0.312   -0.196       0.785  -0.577      -0.860      1.16 \n 9   -0.312   -0.196       0.751  -0.677      -0.450      1.16 \n10   -0.312   -0.196       0.911   0.276      -0.874      1.13 \n# ℹ 253 more rows\n# ℹ 15 more variables: dew_point_temperature &lt;dbl&gt;, solar_radiation &lt;dbl&gt;,\n#   rented_bike_count &lt;dbl&gt;, seasons_Spring &lt;dbl&gt;, seasons_Summer &lt;dbl&gt;,\n#   seasons_Winter &lt;dbl&gt;, holiday_No.Holiday &lt;dbl&gt;, weekpart_Weekend &lt;dbl&gt;,\n#   holiday_No.Holiday_x_seasons_Spring &lt;dbl&gt;,\n#   holiday_No.Holiday_x_seasons_Summer &lt;dbl&gt;,\n#   holiday_No.Holiday_x_seasons_Winter &lt;dbl&gt;, …\n\n\nFor the 3rd recipe:\n\ndo the same as the 2nd recipe\nadd in quadratic terms for each numeric predictor\n\n\nbike_rec_3 &lt;-\n  recipe(rented_bike_count ~ ., data = bike_train) |&gt;\n  step_date(date, features = \"dow\") |&gt;\n  step_mutate(weekpart = factor(if_else(date_dow %in% c(\"Sun\", \"Sat\"), \"Weekend\", \"Weekday\"))) |&gt;\n  step_rm(date, date_dow) |&gt;\n  step_normalize(all_numeric(), -all_outcomes()) |&gt;\n  step_poly(all_numeric(), -all_outcomes(), degree = 2, keep_original_cols = T) |&gt;\n  step_rm(ends_with(\"poly_1\")) |&gt;\n  step_dummy(seasons, holiday, weekpart) |&gt;\n  step_interact(~ starts_with(\"holiday\"):starts_with(\"seasons\") +\n                  temperature:starts_with(\"seasons\") +\n                  temperature:rainfall)\n\n\nbike_rec_3 |&gt;\n  prep(training = bike_train) |&gt;\n  bake(bike_train)\n\n# A tibble: 263 × 29\n   rainfall snowfall temperature humidity wind_speed visibility\n      &lt;dbl&gt;    &lt;dbl&gt;       &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;\n 1   -0.312   -0.196       1.08    0.204      -0.903      0.835\n 2   -0.312   -0.196       1.04   -0.239      -0.401      1.15 \n 3    2.39    -0.196       0.925   1.60       -1.15       0.154\n 4   -0.312   -0.196       0.945   0.243       1.30       1.07 \n 5   -0.312   -0.196       0.980   0.841       0.264      0.420\n 6   -0.195   -0.196       0.802  -0.0842      1.25       0.855\n 7   -0.312   -0.196       0.762  -0.630      -0.125      1.13 \n 8   -0.312   -0.196       0.785  -0.577      -0.860      1.16 \n 9   -0.312   -0.196       0.751  -0.677      -0.450      1.16 \n10   -0.312   -0.196       0.911   0.276      -0.874      1.13 \n# ℹ 253 more rows\n# ℹ 23 more variables: dew_point_temperature &lt;dbl&gt;, solar_radiation &lt;dbl&gt;,\n#   rented_bike_count &lt;dbl&gt;, rainfall_poly_2 &lt;dbl&gt;, snowfall_poly_2 &lt;dbl&gt;,\n#   temperature_poly_2 &lt;dbl&gt;, humidity_poly_2 &lt;dbl&gt;, wind_speed_poly_2 &lt;dbl&gt;,\n#   visibility_poly_2 &lt;dbl&gt;, dew_point_temperature_poly_2 &lt;dbl&gt;,\n#   solar_radiation_poly_2 &lt;dbl&gt;, seasons_Spring &lt;dbl&gt;, seasons_Summer &lt;dbl&gt;,\n#   seasons_Winter &lt;dbl&gt;, holiday_No.Holiday &lt;dbl&gt;, weekpart_Weekend &lt;dbl&gt;, …"
  },
  {
    "objectID": "modeling_practice.html#fit-mlr-models",
    "href": "modeling_practice.html#fit-mlr-models",
    "title": "Modeling Practice",
    "section": "Fit MLR Models",
    "text": "Fit MLR Models\nSet up linear model fit to use the “lm” engine.\n\nlm_mod &lt;-\n  linear_reg() |&gt;\n  set_engine(\"lm\")\n\nFit models for recipe 1 using 10 fold CV via fit_resamples() and consider the training set CV error.\n\nbike_wfl_1 &lt;-\n  workflow() |&gt;\n  add_recipe(bike_rec_1) |&gt;\n  add_model(lm_mod)\n\n\nbike_cv_fits_1 &lt;-\n  bike_wfl_1 |&gt;\n  fit_resamples(bike_10_fold)\n\n\nbike_cv_1_metrics &lt;-\n  bike_cv_fits_1 |&gt;\n  collect_metrics()\n\nRepeat process for recipe 2.\n\nbike_wfl_2 &lt;-\n  workflow() |&gt;\n  add_recipe(bike_rec_2) |&gt;\n  add_model(lm_mod)\n\n\nbike_cv_fits_2 &lt;-\n  bike_wfl_2 |&gt;\n  fit_resamples(bike_10_fold)\n\n\nbike_cv_2_metrics &lt;-\n  bike_cv_fits_2 |&gt;\n  collect_metrics()\n\nRepeat process for recipe 3.\n\nbike_wfl_3 &lt;-\n  workflow() |&gt;\n  add_recipe(bike_rec_3) |&gt;\n  add_model(lm_mod)\n\n\nbike_cv_fits_3 &lt;-\n  bike_wfl_3 |&gt;\n  fit_resamples(bike_10_fold)\n\n\nbike_cv_3_metrics &lt;-\n  bike_cv_fits_3 |&gt;\n  collect_metrics()\n\nConsider the training set CV error across recipes to choose a best model.\n\nrbind(bike_cv_1_metrics, bike_cv_2_metrics, bike_cv_3_metrics)\n\n# A tibble: 6 × 6\n  .metric .estimator     mean     n  std_err .config             \n  &lt;chr&gt;   &lt;chr&gt;         &lt;dbl&gt; &lt;int&gt;    &lt;dbl&gt; &lt;chr&gt;               \n1 rmse    standard   3987.       10 171.     Preprocessor1_Model1\n2 rsq     standard      0.853    10   0.0110 Preprocessor1_Model1\n3 rmse    standard   2980.       10 276.     Preprocessor1_Model1\n4 rsq     standard      0.912    10   0.0122 Preprocessor1_Model1\n5 rmse    standard   2898.       10 250.     Preprocessor1_Model1\n6 rsq     standard      0.917    10   0.0105 Preprocessor1_Model1\n\n\n\nbike_best_fit &lt;-\n  bike_wfl_3 |&gt;\n  fit(bike_train)\n\n\nbike_best_fit |&gt;\n  tidy()\n\n# A tibble: 29 × 5\n   term                  estimate std.error statistic  p.value\n   &lt;chr&gt;                    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n 1 (Intercept)             16061.     1620.     9.92  1.41e-19\n 2 rainfall                -1538.      429.    -3.59  4.05e- 4\n 3 snowfall                 -238.      194.    -1.23  2.22e- 1\n 4 temperature             -1177.     4252.    -0.277 7.82e- 1\n 5 humidity                -2556.     1476.    -1.73  8.48e- 2\n 6 wind_speed               -476.      209.    -2.28  2.37e- 2\n 7 visibility               -118.      274.    -0.432 6.66e- 1\n 8 dew_point_temperature    8358.     4922.     1.70  9.08e- 2\n 9 solar_radiation          3473.      378.     9.19  2.25e-17\n10 rainfall_poly_2         10396.     3505.     2.97  3.33e- 3\n# ℹ 19 more rows\n\n\nUsing the best model, fit the model to the entire training data set using the last_fit() function. Compute the RMSE metric on the test set.\n\nbike_wfl_3 |&gt;\n  last_fit(split = bike_split) |&gt;\n  collect_metrics()\n\n# A tibble: 2 × 4\n  .metric .estimator .estimate .config             \n  &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt;               \n1 rmse    standard    3145.    Preprocessor1_Model1\n2 rsq     standard       0.895 Preprocessor1_Model1\n\n\nObtain the final model (fit on the entire training set) coefficient table using extract_fit_parsnip() and tidy().\n\nextract_fit_parsnip(\n  bike_wfl_3 |&gt;\n  last_fit(split = bike_split)\n) |&gt;\n  tidy()\n\n# A tibble: 29 × 5\n   term                  estimate std.error statistic  p.value\n   &lt;chr&gt;                    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n 1 (Intercept)             16061.     1620.     9.92  1.41e-19\n 2 rainfall                -1538.      429.    -3.59  4.05e- 4\n 3 snowfall                 -238.      194.    -1.23  2.22e- 1\n 4 temperature             -1177.     4252.    -0.277 7.82e- 1\n 5 humidity                -2556.     1476.    -1.73  8.48e- 2\n 6 wind_speed               -476.      209.    -2.28  2.37e- 2\n 7 visibility               -118.      274.    -0.432 6.66e- 1\n 8 dew_point_temperature    8358.     4922.     1.70  9.08e- 2\n 9 solar_radiation          3473.      378.     9.19  2.25e-17\n10 rainfall_poly_2         10396.     3505.     2.97  3.33e- 3\n# ℹ 19 more rows"
  },
  {
    "objectID": "modeling_practice.html#fit-lasso-model",
    "href": "modeling_practice.html#fit-lasso-model",
    "title": "Modeling Practice",
    "section": "Fit LASSO Model",
    "text": "Fit LASSO Model"
  },
  {
    "objectID": "modeling_practice.html#fit-regression-tree-model",
    "href": "modeling_practice.html#fit-regression-tree-model",
    "title": "Modeling Practice",
    "section": "Fit Regression Tree Model",
    "text": "Fit Regression Tree Model"
  },
  {
    "objectID": "modeling_practice.html#fit-bagged-tree-model",
    "href": "modeling_practice.html#fit-bagged-tree-model",
    "title": "Modeling Practice",
    "section": "Fit Bagged Tree Model",
    "text": "Fit Bagged Tree Model"
  },
  {
    "objectID": "modeling_practice.html#fit-random-forest-model",
    "href": "modeling_practice.html#fit-random-forest-model",
    "title": "Modeling Practice",
    "section": "Fit Random Forest Model",
    "text": "Fit Random Forest Model"
  }
]